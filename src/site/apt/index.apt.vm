 ------
 Introduction
 ------
 Nicolas de Loof
 Olivier Lamy
 ------
 2010-12-02 

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html

%{snippet|file=src/site/legacy.html|verbatim=false}

Mojo's Maven Plugin for GWT

 Welcome to Mojo's Maven Plugin for {{{http://www.gwtproject.org/}GWT}}
 User Guide. This documentation will drive you to setup you GWT web application development
 using Maven as build tool. This guide covers project organisation and setup, integration with
 development environment, and running GWT SDK tools from maven command line.

 If you're new to GWT or Maven, you might want to first read the
 {{{http://www.gwtproject.org/doc/latest/DevGuide}GWT documentation}} and get more
 familiar with Maven by reading at least its
 {{{http://maven.apache.org/guides/getting-started/index.html}getting started guide}}
 or by reading the online
 {{{http://www.sonatype.com/books/mvnref-book/reference/public-book.html}reference book}}.
 
 << This mojo has been developed and tested with the gwt version ${siteGwtVersion} >>
 

  
  
Mojo's Maven Plugin for GWT supports:

  * GWT compiler execution for packaging your application into a WAR {{{./user-guide/compile.html}Compile and Debug}}

  * generate GWT internationalization ("i18n") interfaces from bundles {{{./user-guide/i18n.html}Internationalization}}

  * running tests (or test suites) based on GWTTestCase framework as part of Maven build, {{{./user-guide/testing.html}Testing Support}}

  * run (or debug) in DevMode from Maven {{{./user-guide/hosted.html}DevMode}}

  * generate boiler code for GWT-RPC Async interface from synchronous server-side interfaces {{{./user-guide/async.html}Generate Async interfaces for GWT-RPC}}
  
  * integrate nicelly into Eclipse, thanks to M2Eclipse and the Google Plugin for Eclipse.  

TIPS

  * {{{./user-guide/archetype.html}Using the archetype}}
 
  * {{{./user-guide/project.html}Organize project}}
  
  * {{{./plugin-info.html}Goals and Parameters Reference}}

  * {{{./faq.html}Frequently Asked Questions}} 


WANT TO CONTRIBUTE ?

  We are big fans of the {{{http://jenkins-ci.org/}Jenkins}} community model, and want to apply it to lower the contribution barrier.
  Code is hosted on {{{https://github.com/gwt-maven-plugin/gwt-maven-plugin}GitHub}}: fork it, improve it, and send pull requests.
  Just please log what you're working for in {{{http://jira.codehaus.org/browse/MGWT}JIRA}} and use the JIRA ID as a prefix for 
  your commits. If you feel comfortable with the code, just ask for commit permission to apply changes by yourself.

  Development builds are tested on next GWT SDK milestones on
  {{{https://travis-ci.org/gwt-maven-plugin/gwt-maven-plugin/}Travis CI}}

[https://travis-ci.org/gwt-maven-plugin/gwt-maven-plugin.svg]

